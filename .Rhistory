labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
p3 <- ggplot(data = melt(covPhi_sen2_sparse_BMSFA), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0)  +
ggtitle(TeX("Estimated $\\Phi\\Phi^T$ (sparse) by BMSFA")) +
labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
grid.arrange(p1, p2, p3, ncol=3)
##################### Summaries (box plots) for simulations ####################
# Load data
sen1_dense <- readRDS("./RDS/data_sen1_dense.rds")
View(sen1_dense)
##################### Summaries (box plots) for simulations ####################
# Load data
sen1_dense <- readRDS("./RDS/sen1_dense.rds")
pivot_longer(sen1_dense, cols = c("run_time_MOMSS", "run_time_BMSFA"), names_to = "method")
pivot_longer(as.data.frame(sen1_dense), cols = c("run_time_MOMSS", "run_time_BMSFA"), names_to = "method")
sen1_dense %>% as.data.frame() %>% select(run_time_MOMSS, run_time_BMSFA) %>% melt()
sen1_dense %>% as.data.frame() %>% select(run_time_MOMSS, run_time_BMSFA)
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(cols = ., names_to = "method", values_to = "value")
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(cols = ., names_to = "method", values_to = "value")
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(everything(), names_to = "method", values_to = "value")
p1 <- sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(everything(), names_to = "method", values_to = "value")
View(p1)
?pivot_longer
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Runtime (seconds)")
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Runtime (seconds)")
sen1_dense %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Peak RAM (MB)")
sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS, RV_BMSFA) %>%
rename_with(~ gsub("RV_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "RV comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS, RV_BMSFA) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "RV comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "RV comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (dense) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
sen1_dense %>% as.data.frame() %>%
select(FN_MOMSS_Phi, FN_BMSFA_Phi) %>%
rename_with(~ gsub("FN_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("Frobenius norm of estimated $\\Phi\\Phi^T$ (dense) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Frobenius norm")
grid.arrange(p1, p2, p3, ncol=3)
p1 <- sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Runtime (seconds)")
# boxplot - peak_RAM
p2 <- sen1_dense %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Peak RAM (MB)")
# boxplot - RV of Phi
p3 <- sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (dense) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
grid.arrange(p1, p2, p3, ncol=3)
p1 <- sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Runtime (seconds)")
# boxplot - peak_RAM
p2 <- sen1_dense %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Peak RAM (MB)")
# boxplot - RV of Phi
p3 <- sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (dense) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "RV")
grid.arrange(p1, p2, p3, ncol=3)
##################### Senerio 2: Sparse ###################
# Load data
sen1_sparse <- readRDS("./RDS/sen1_sparse.rds")
sen1_sparse %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (sparse)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Runtime (seconds)")
sen1_sparse %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (sparse)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Peak RAM (MB)")
sen1_sparse %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (sparse) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "RV")
grid.arrange(p1, p2, p3, ncol=3)
# Load data
sen1_sparse <- readRDS("./RDS/sen1_sparse.rds")
# boxplot - runtime
p1 <- sen1_sparse %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (sparse)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Runtime (seconds)")
# boxplot - peak_RAM
p2 <- sen1_sparse %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (sparse)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Peak RAM (MB)")
# boxplot - RV of Phi
p3 <- sen1_sparse %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (sparse) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "RV")
grid.arrange(p1, p2, p3, ncol=3)
save.image()
rds = readRDS("sen1_dense.rds")
rds
rds = readRDS("sen1_sparse.rds")
rds
q()
rds=readRDS("sen1_sparse.rds")
rds
q()
rds=readRDS("sen1_sparse.rds")
rds
q()
rds=readRDS("sen1_sparse.rds")
rds
q()
View(fit)
source("./FBPFA-PFA with fixed latent dim.R")
fit <- PFA(Y=t(sim_data_test$Y_mat),
latentdim = 5,
grpind = rep(1:length(sim_data_test$n_s), times = sim_data_test$n_s))
set.seed(6)
sim_data_test <- gen_senerioSS(S=4, N=500, P=50, Q=2, K=5)
packages <- c('MSFA', 'peakRAM', 'BFR.BE', 'tidyverse', 'matlab', 'MatrixCorrelation')
lapply(packages, library, character.only = TRUE)
library(devtools)
source("./FBPFA-PFA with fixed latent dim.R")
source("./functions/gen_senerioSS.R")
source("./functions/gen_senerioBMSFA.R")
source("./functions/calculateRV.R")
source("./functions/post_BMSFA.R")
source("./functions/post_PFA.R")
source("./functions/measurements.R")
set.seed(6)
sim_data_test <- gen_senerioSS(S=4, N=500, P=50, Q=2, K=5)
fit <- PFA(Y=t(sim_data_test$Y_mat),
latentdim = 5,
grpind = rep(1:length(sim_data_test$n_s), times = sim_data_test$n_s))
rep(1:length(sim_data_test$n_s), times = sim_data_test$n_s)
View(sim_data_test)
fit <- PFA(Y=t(sim_data_test$Y_mat),
latentdim = 5,
grpind = rep(1:length(sim_data_test$n_s), times = sim_data_test$n_s))
fit <- PFA(Y=t(sim_data_test$Y_mat),
latentdim = NULL,
grpind = rep(1:length(sim_data_test$n_s), times = sim_data_test$n_s))
source("./FBPFA-PFA.R")
fit <- PFA(Y=t(sim_data_test$Y_mat),
grpind = rep(1:length(sim_data_test$n_s), times = sim_data_test$n_s))
source("./FBPFA-PFA with fixed latent dim.R")
source("./FBPFA-PFA with fixed latent dim.R")
fit <- PFA(Y=t(sim_data_test$Y_mat),
latentdim = 5,
grpind = rep(1:length(sim_data_test$n_s), times = sim_data_test$n_s))
View(fit)
post_PFA <- function(fit){
sigmap <- Reduce('+', fit$Latentsigma[200:499])/length(fit$Latentsigma[200:499])
lambdap <- (Reduce('+', fit$Loading[200:499])/length(fit$Latentsigma[200:499])) %*% diag(sigmap)
return(list(est_Phi=lambdap))
}
Phi <- post_PFA(fit)
RV(Phi, sim_data_test$Phi)
View(sim_data_test)
RV(Phi$est_Phi, sim_data_test$Phi)
QYprG <- function(i, mat = Y, vec = grpind, Ql = Qlist){
p <- nrow(Y)
temp <- matrix(Ql[, vec[i]], p, p)
return(temp%*%mat[, i])
}
n <- 500
p  <- 21
r  <- 5
grp <- 10
eta0 <- matrix(rnorm(r*n), r, n)
lambda0           <- matrix(0, p, r)
lambda0[1:5, 1]   <- rnorm(5, mean = 5, sd = 1)
lambda0[5:9, 2]   <- rnorm(5, mean = 5, sd = 1)
lambda0[9:13, 3]  <- rnorm(5, mean = 5, sd = 1)
lambda0[13:17, 4] <- rnorm(5, mean = 5, sd = 1)
lambda0[17:21, 5] <- rnorm(5, mean = 5, sd = 1)
Y <- matrix(rnorm(p*n, mean = lambda0 %*% eta0, sd = 1), p, n)#matrix(rnorm(p*n, mean = lambda0 %*% eta0, sd = 1), p, n)
Qlist <- matrix(array(diag(p)), p^2, grp)
Qmean <- array(1*diag(p))
set.seed(100)
Qlist <- matrix(array(diag(p)), p^2, grp)
Qmean <- array(1*diag(p))
set.seed(1)
#Generating the perturbation matrices
for(i in 2:grp){
Qlist[, i] <- array(matrix(rnorm(p^2, Qmean, sd = sqrt(0.0001)), p, p))
}
grpind = rep(1:10, each = 50)
Y <- parallel::mcmapply(1:n, FUN = QYprG, MoreArgs = list(mat=Y)) #matrix(Q %*% array(Y), p, n)
lambda0
fit <- PFA(Y,latentdim = 5, grpind = rep(1:10, each = 50), ini.PCA = T)
sigma2p <- Reduce('+', fit$Latentsigma[200:499])/length(fit$Latentsigma[200:499])
lambdap <- (Reduce('+', fit$Loading[200:499])/length(fit$Latentsigma[200:499])) %*% diag(sigma2p)
RV(lambdap, lambda0)
sigmas  <- fit$Latentsigma
lambdals <- fit$Loading
posteriorlam <- array(0, dim=c(50, 5, length(sigmas)))
for(i in 1:length(sigmas)){
posteriorlam[,,i] <- lambdals[[i]] %*% diag(sigmas[[i]])
}
sigmas  <- fit$Latentsigma
lambdals <- fit$Loading
posteriorlam <- NULL
for(i in 1:length(sigmas)){
posteriorlam <- c(posteriorlam, lambdals[[i]] %*% diag(sigmas[[i]]))
}
posteriorlam <- list()
for(i in 200:499){
posteriorlam <- c(posteriorlam, lambdals[[i]] %*% diag(sigmas[[i]]))
}
View(result_test)
?sp_OP
posteriorlam <- array(0, 50, 5, length(fit$Latentsigma[200:499]))
?array
posteriorlam <- array(0, dim = c(50, 5, length(200:499)))
# OP
sigmas  <- fit$Latentsigma
lambdals <- fit$Loading
posteriorlam <- array(0, dim = c(50, 5, length(200:499)))
for(i in 200:499){
posteriorlam[,,i] <- lambdals[[i]] %*% diag(sigmas[[i]])
}
lambdals[[i]] %*% diag(sigmas[[i]])
posteriorlam <- array(0, dim = c(21, 5, length(200:499)))
for(i in 200:499){
posteriorlam[,,i] <- lambdals[[i]] %*% diag(sigmas[[i]])
}
lambdals[[i]] %*% diag(sigmas[[i]])
posteriorlam <- array(0, dim = c(21, 5, length(200:499)))
for(i in 1:length(200:499)){
posteriorlam[,,i] <- lambdals[[i]] %*% diag(sigmas[[i]])
}
posteriorlam <- MSFA::sp_OP(posteriorlam, itermax = 10)
RV(posteriorlam$Phi, lambda0)
# OP
sigmas  <- fit$Latentsigma
lambdals <- fit$Loading
posteriorlam <- array(0, dim = c(21, 5, length(200:499)))
for(i in 1:length(200:499)){
posteriorlam[,,i] <- lambdals[[i]] %*% diag(sigmas[[i]])
}
posteriorlam <- MSFA::sp_OP(posteriorlam, itermax = 50)
RV(posteriorlam$Phi, lambda0)
save.image()
View(fit)
devtools::install_github("noirritchandra/SUFA", build_vignettes = TRUE)
# SUFA
#
#install.packages("devtools")
devtools::install_github("noirritchandra/SUFA", build_vignettes = TRUE)
warnings()
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
devtools::install_github("noirritchandra/SUFA", build_vignettes = TRUE)
devtools::install_github("noirritchandra/SUFA", build_vignettes = TRUE)
warnings()
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
warnings()
devtools::install_github("noirritchandra/SUFA", build_vignettes = TRUE)
devtools::install_github("noirritchandra/SUFA", build_vignettes = TRUE)
install.packages("cli")
install.packages("quantreg")
install.packages("Matrix")
sessionInfo()
install.packages("Matrix")
install.packages("Rtools")
install.packages("quantreg")
devtools::install_github("noirritchandra/SUFA", build_vignettes = TRUE)
install.packages("devtools")
library(SUFA)
devtools::install_github("noirritchandra/SUFA", build_vignettes = TRUE)
install.packages("tidyverse")
load("path/to/genedata.rda")
setwd("C:/Users/liang/AppData/Local/R/win-library/4.4")
setwd("C:/Users/liang/AppData/Local/R/win-library/4.4/SUFA-main")
setwd("C:/Users/liang/AppData/Local/R/win-library/4.4/SUFA-main/data")
load("genedata.rda")
setwd("C:/Users/liang/AppData/Local/R/win-library/4.4/SUFA-main/data")
load("genedata.rda")
setwd("C:/Users/liang/OneDrive - Brown University/2023-2/tutorial_git")
setwd("C:/Users/liang/AppData/Local/R/win-library/4.4/SUFA-main/data")
genedata <- data.frame()  # Replace with appropriate dummy data structure
save(genedata, file = "genedata.rda")
setwd("C:/Users/liang/AppData/Local/R/win-library/4.4/SUFA-main")
devtools::install(".", build_opts = c("--no-resave-data", "--no-lazy"))
devtools::install(".")
install.packages("quantreg")
install.packages("Matrix")
install.packages("Matrix")
