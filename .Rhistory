geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0)  +
ggtitle(TeX("Estimated $\\Phi\\Phi^T$ (dense) by MOM-SS")) +
labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=6))
p3 <- ggplot(data = melt(covPhi_sen1_dense_BMSFA), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0)  +
ggtitle(TeX("Estimated $\\Phi\\Phi^T$ (dense) by BMSFA")) +
labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=6))
# Put plots in a giant plot
grid.arrange(p1, p2, p3, ncol=3)
# Heatmap
p1 <- ggplot(data = melt(covPhi_sen1_dense), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
ggtitle(TeX("True $\\Phi\\Phi^T$ (dense)")) +
labs(x="", y="") +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
p2 <- ggplot(data = melt(covPhi_sen1_dense_MOMSS), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0)  +
ggtitle(TeX("Estimated $\\Phi\\Phi^T$ (dense) by MOM-SS")) +
labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
p3 <- ggplot(data = melt(covPhi_sen1_dense_BMSFA), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0)  +
ggtitle(TeX("Estimated $\\Phi\\Phi^T$ (dense) by BMSFA")) +
labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
# Put plots in a giant plot
grid.arrange(p1, p2, p3, ncol=3)
save_plot("sen1_dense_heatmap.png", width = 1194, height = 328)
# Save the plot
ggsave("sen1_dense_heatmap.png", width = 1194, height = 328)
# Save the plot
ggsave("sen1_dense_heatmap.png", width = 4, height = 1)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
source("gen_senerioBMSFA.R")
source("./functions/gen_senerioBMSFA.R")
source("C:/Users/liang/OneDrive - Brown University/2023-2/tutorial/functions/gen_senerioSS.R", echo=TRUE)
setwd("C:/Users/liang/OneDrive - Brown University/2023-2/tutorial")
source("./functions/gen_senerioBMSFA.R")
source("functions/gen_senerioBMSFA.R")
source("functions/gen_senerioSS.R")
source("functions/gen_senerioSS.R")
# Functions to generate the data
source("./functions/gen_senerioSS.R")
p1 <- ggplot(data = melt(covPhi_sen1_dense), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
ggtitle(TeX("True $\\Phi\\Phi^T$ (dense)")) +
labs(x="", y="") +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
p2 <- ggplot(data = melt(covPhi_sen1_dense_MOMSS), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0)  +
ggtitle(TeX("Estimated $\\Phi\\Phi^T$ (dense) by MOM-SS")) +
labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
p3 <- ggplot(data = melt(covPhi_sen1_dense_BMSFA), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0)  +
ggtitle(TeX("Estimated $\\Phi\\Phi^T$ (dense) by BMSFA")) +
labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
grid.arrange(p1, p2, p3, ncol=3)
ggsave("./figs/sen1_dense_heatmap.png", width = 12, height = 3)
# Functions to generate the data
source("functions/gen_senerioSS.R")
# Functions to generate the data
source("../functions/gen_senerioSS.R")
source("../functions/calculateRV.R")
# Instantiate the data
set.seed(5)
data_sen1 <- gen_senerioSS(S=4, N=500, P=50, Q=2, K=5, genPhi = "sparse")
# install.packages("remotes")
# remotes::install_github("rdevito/MSFA")
library(MSFA)
#install.packages("devtools")
#library(devtools)
#devtools::install_github("AleAviP/BFR.BE")
library(BFR.BE)
# Other packages
library(tidyverse)
#library(matlab)
library(MatrixCorrelation)
# My own version of MSFA
library(devtools)
load_all("./MSFA")
# Instantiate the data
set.seed(5)
data_sen1 <- gen_senerioSS(S=4, N=500, P=50, Q=2, K=5, genPhi = "sparse")
?zeros
# Functions to generate the data
source("../functions/gen_senerioSS.R")
source("../functions/calculateRV.R")
# Instantiate the data
set.seed(5)
data_sen1 <- gen_senerioSS(S=4, N=500, P=50, Q=2, K=5, genPhi = "sparse")
saveRDS(data_sen1, "data_sen1_sparse.rds")
sen1_Y_mat <- data_sen1$Y_mat
sen1_A <- data_sen1$A
sen1_X <- data_sen1$X
sen1_Y_list <- data_sen1$Y_list
# Do not run it again.
#Fit the MOM-SS model
set.seed(10)
result_MOMSS_sen1 <- BFR.BE.EM.CV(x = sen1_Y_mat, v = sen1_X,
b = sen1_A, q = 5, scaling = FALSE)
#Fit the BMSFA model
result_BMSFA_sen1 <- sp_msfa(sen1_Y_list, k = 5, j_s = c(1,1,1,1), scaling = FALSE,
control = list(nrun = 2000, burn = 1000),
outputlevel = 3)
saveRDS(data_sen1, "data_sen1_sparse.rds")
saveRDS(data_sen1, "../RDS/data_sen1_sparse.rds")
# save the result
saveRDS(result_MOMSS_sen1, "result_MOMSS_sen1_sparse.rds")
saveRDS(result_BMSFA_sen1, "result_BMSFA_sen1_sparse.rds")
# save the result
saveRDS(result_MOMSS_sen1, "../RDS/result_MOMSS_sen1_sparse.rds")
saveRDS(result_BMSFA_sen1, "../RDS/result_BMSFA_sen1_sparse.rds")
ggplot(data = melt(covPhi_sen2_sparse), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
ggtitle(TeX("True $\\Phi\\Phi^T$ (sparse)")) +
labs(x="", y="") +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
# Load true data
data_sen2_sparse <- readRDS("./RDS/data_sen2_sparse.rds")
setwd("C:/Users/liang/OneDrive - Brown University/2023-2/tutorial")
# Load estimated data
data_sen2_sparse_MOMSS <- readRDS("./RDS/result_MOMSS_sen2.rds")
# Load true data
data_sen2_sparse <- readRDS("./RDS/data_sen2_sparse.rds")
# Load true data
data_sen2_sparse <- readRDS("./RDS/data_sen1_sparse.rds")
# Load true data
data_sen2_sparse <- readRDS("./RDS/data_sen1_sparse.rds")
Phi_sen2_sparse <- data_sen2_sparse$Phi
covPhi_sen2_sparse <- tcrossprod(Phi_sen2_sparse)
# Load estimated data
data_sen2_sparse_MOMSS <- readRDS("./RDS/result_MOMSS_sen1_sparse.rds")
Phi_sen2_sparse_MOMSS <- data_sen2_sparse_MOMSS$M
covPhi_sen2_sparse_MOMSS <- tcrossprod(Phi_sen2_sparse_MOMSS)
data_sen2_sparse_BMSFA <- readRDS("./RDS/result_BMSFA_sen1_sparse.rds")
covPhi_sen2_sparse_BMSFA <- data_sen2_sparse_BMSFA$SigmaPhi
# Heatmap
p1 <- ggplot(data = melt(covPhi_sen2_sparse), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
ggtitle(TeX("True $\\Phi\\Phi^T$ (sparse)")) +
labs(x="", y="") +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
ggplot(data = melt(covPhi_sen2_sparse), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
ggtitle(TeX("True $\\Phi\\Phi^T$ (sparse)")) +
labs(x="", y="") +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
# Heatmap
p1 <- ggplot(data = melt(covPhi_sen2_sparse), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
ggtitle(TeX("True $\\Phi\\Phi^T$ (sparse)")) +
labs(x="", y="") +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
p2 <- ggplot(data = melt(covPhi_sen2_sparse_MOMSS), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0)  +
ggtitle(TeX("Estimated $\\Phi\\Phi^T$ (sparse) by MOM-SS")) +
labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
p3 <- ggplot(data = melt(covPhi_sen2_sparse_BMSFA), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0)  +
ggtitle(TeX("Estimated $\\Phi\\Phi^T$ (sparse) by BMSFA")) +
labs(x="", y="") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
grid.arrange(p1, p2, p3, ncol=3)
##################### Summaries (box plots) for simulations ####################
# Load data
sen1_dense <- readRDS("./RDS/data_sen1_dense.rds")
View(sen1_dense)
##################### Summaries (box plots) for simulations ####################
# Load data
sen1_dense <- readRDS("./RDS/sen1_dense.rds")
pivot_longer(sen1_dense, cols = c("run_time_MOMSS", "run_time_BMSFA"), names_to = "method")
pivot_longer(as.data.frame(sen1_dense), cols = c("run_time_MOMSS", "run_time_BMSFA"), names_to = "method")
sen1_dense %>% as.data.frame() %>% select(run_time_MOMSS, run_time_BMSFA) %>% melt()
sen1_dense %>% as.data.frame() %>% select(run_time_MOMSS, run_time_BMSFA)
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(cols = ., names_to = "method", values_to = "value")
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(cols = ., names_to = "method", values_to = "value")
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(everything(), names_to = "method", values_to = "value")
p1 <- sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(everything(), names_to = "method", values_to = "value")
View(p1)
?pivot_longer
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Runtime (seconds)")
sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Runtime (seconds)")
sen1_dense %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Peak RAM (MB)")
sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS, RV_BMSFA) %>%
rename_with(~ gsub("RV_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "RV comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS, RV_BMSFA) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "RV comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "RV comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (dense) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
sen1_dense %>% as.data.frame() %>%
select(FN_MOMSS_Phi, FN_BMSFA_Phi) %>%
rename_with(~ gsub("FN_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("Frobenius norm of estimated $\\Phi\\Phi^T$ (dense) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Frobenius norm")
grid.arrange(p1, p2, p3, ncol=3)
p1 <- sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Runtime (seconds)")
# boxplot - peak_RAM
p2 <- sen1_dense %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "Peak RAM (MB)")
# boxplot - RV of Phi
p3 <- sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (dense) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=12))+
labs(x = "Method", y = "RV")
grid.arrange(p1, p2, p3, ncol=3)
p1 <- sen1_dense %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Runtime (seconds)")
# boxplot - peak_RAM
p2 <- sen1_dense %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (dense)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Peak RAM (MB)")
# boxplot - RV of Phi
p3 <- sen1_dense %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (dense) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "RV")
grid.arrange(p1, p2, p3, ncol=3)
##################### Senerio 2: Sparse ###################
# Load data
sen1_sparse <- readRDS("./RDS/sen1_sparse.rds")
sen1_sparse %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (sparse)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Runtime (seconds)")
sen1_sparse %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (sparse)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Peak RAM (MB)")
sen1_sparse %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (sparse) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "RV")
grid.arrange(p1, p2, p3, ncol=3)
# Load data
sen1_sparse <- readRDS("./RDS/sen1_sparse.rds")
# boxplot - runtime
p1 <- sen1_sparse %>% as.data.frame() %>%
select(run_time_MOMSS, run_time_BMSFA) %>%
rename_with(~ gsub("run_time_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Runtime comparison (sparse)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Runtime (seconds)")
# boxplot - peak_RAM
p2 <- sen1_sparse %>% as.data.frame() %>%
select(peak_RAM_MOMSS, peak_RAM_BMSFA) %>%
rename_with(~ gsub("peak_RAM_", "", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
labs(title = "Peak RAM comparison (sparse)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "Peak RAM (MB)")
# boxplot - RV of Phi
p3 <- sen1_sparse %>% as.data.frame() %>%
select(RV_MOMSS_Phi, RV_BMSFA_Phi) %>%
rename_with(~ gsub("RV_(.*)_Phi", "\\1", .x), everything()) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
unnest(value) %>%
ggplot(aes(x = method, y = value)) +
geom_boxplot() +
ggtitle(TeX("RV of estimated $\\Phi\\Phi^T$ (sparse) comparison")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
text = element_text(size=8))+
labs(x = "Method", y = "RV")
grid.arrange(p1, p2, p3, ncol=3)
save.image()
